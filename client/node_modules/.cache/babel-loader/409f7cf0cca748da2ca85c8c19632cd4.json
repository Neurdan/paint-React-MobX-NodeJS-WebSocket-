{"ast":null,"code":"var _jsxFileName = \"/Users/mykola/Desktop/Projects/PetProject2/my-app/client/src/components/Toolbar.jsx\";\nimport React from \"react\";\nimport \"../styles/toolbar.scss\";\nimport toolState from \"../store/toolState\";\nimport Brush from \"../tools/Brush\";\nimport canvasState from \"../store/canvasState\";\nimport Rect from \"../tools/Rect\";\nimport Circle from \"../tools/Circle\";\nimport Line from \"../tools/Line\";\nimport Eraser from \"../tools/Eraser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Toolbar = () => {\n  const changeColor = e => {\n    toolState.setStrokeColor(e.target.value);\n    toolState.setFillColor(e.target.value);\n  };\n\n  const download = () => {\n    const dataUrl = canvasState.canvas.toDataURL();\n    const a = document.createElement('a');\n    a.href = dataUrl;\n    a.download = canvasState.sessionId + '.jpg';\n    doc;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn brush\",\n      onClick: () => toolState.setTool(new Brush(canvasState.canvas, canvasState.socket, canvasState.sessionId))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn rect\",\n      onClick: () => toolState.setTool(new Rect(canvasState.canvas, canvasState.socket, canvasState.sessionId))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn circle\",\n      onClick: () => toolState.setTool(new Circle(canvasState.canvas))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn eraser\",\n      onClick: () => toolState.setTool(new Eraser(canvasState.canvas))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn line\",\n      onClick: () => toolState.setTool(new Line(canvasState.canvas))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => changeColor(e),\n      style: {\n        marginLeft: 10\n      },\n      type: \"color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn undo\",\n      onClick: () => {\n        canvasState.undo();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn redo\",\n      onClick: () => canvasState.redo()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toolbar__btn save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Toolbar;\nexport default Toolbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toolbar\");","map":{"version":3,"names":["React","toolState","Brush","canvasState","Rect","Circle","Line","Eraser","Toolbar","changeColor","e","setStrokeColor","target","value","setFillColor","download","dataUrl","canvas","toDataURL","a","document","createElement","href","sessionId","doc","setTool","socket","marginLeft","undo","redo"],"sources":["/Users/mykola/Desktop/Projects/PetProject2/my-app/client/src/components/Toolbar.jsx"],"sourcesContent":["import React from \"react\";\nimport \"../styles/toolbar.scss\"\nimport toolState from \"../store/toolState\";\nimport Brush from \"../tools/Brush\";\nimport canvasState from \"../store/canvasState\";\nimport Rect from \"../tools/Rect\";\nimport Circle from \"../tools/Circle\";\nimport Line from \"../tools/Line\";\nimport Eraser from \"../tools/Eraser\";\n\nconst Toolbar = () => {\n    const changeColor = (e) => {\n        toolState.setStrokeColor(e.target.value)\n        toolState.setFillColor(e.target.value)\n    }\n    const download = () => {\n        const dataUrl = canvasState.canvas.toDataURL()\n        const a = document.createElement('a')\n        a.href = dataUrl\n        a.download = canvasState.sessionId + '.jpg'\n        doc\n    }\n\n\n    return (\n        <div className=\"toolbar\">\n            <button className=\"toolbar__btn brush\"\n                    onClick={() => toolState.setTool(new Brush(canvasState.canvas, canvasState.socket, canvasState.sessionId))}/>\n            <button className=\"toolbar__btn rect\"\n                    onClick={() => toolState.setTool(new Rect(canvasState.canvas, canvasState.socket, canvasState.sessionId))}/>\n            <button className=\"toolbar__btn circle\" onClick={() => toolState.setTool(new Circle(canvasState.canvas))}/>\n            <button className=\"toolbar__btn eraser\" onClick={() => toolState.setTool(new Eraser(canvasState.canvas))}/>\n            <button className=\"toolbar__btn line\" onClick={() => toolState.setTool(new Line(canvasState.canvas))}/>\n            <input onChange={e => changeColor(e)} style={{marginLeft: 10}} type=\"color\"/>\n            <button className=\"toolbar__btn undo\" onClick={() => {\n                canvasState.undo()\n            }}/>\n            <button className=\"toolbar__btn redo\" onClick={() => canvasState.redo()}/>\n            <button className=\"toolbar__btn save\"/>\n        </div>\n    )\n}\n\nexport default Toolbar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}