{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\n\nclass CanvasState {\n  constructor() {\n    this.canvas = null;\n    this.undoList = [];\n    this.redoList = [];\n    this.username = '';\n    makeAutoObservable(this);\n  }\n\n  setUsername(name) {\n    this.username = name;\n  }\n\n  setCanvas(canvas) {\n    this.canvas = canvas;\n  }\n\n  pushToUndo(data) {\n    this.undoList.push(data);\n  }\n\n  pushToRedo(data) {\n    this.redoList.push(data);\n  }\n\n  undo() {\n    let ctx = this.canvas.getContext('2d');\n\n    if (this.undoList.length > 0) {\n      let dataUrl = this.undoList.pop();\n      this.redoList.push(this.canvas.toDataURL());\n      let img = new Image();\n      img.src = dataUrl;\n\n      img.onload = () => {\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\n      };\n    } else {\n      ctx.clearRect(0, 0, this.canvas.width, this.canvas.heigth);\n    }\n  }\n\n  redo() {\n    let ctx = this.canvas.getContext('2d');\n\n    if (this.redoList.length > 0) {\n      let dataUrl = this.redoList.pop();\n      this.undoList.push(this.canvas.toDataURL());\n      let img = new Image();\n      img.src = dataUrl;\n\n      img.onload = () => {\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\n      };\n    }\n  }\n\n}\n\nexport default new CanvasState();","map":{"version":3,"names":["makeAutoObservable","CanvasState","constructor","canvas","undoList","redoList","username","setUsername","name","setCanvas","pushToUndo","data","push","pushToRedo","undo","ctx","getContext","length","dataUrl","pop","toDataURL","img","Image","src","onload","clearRect","width","height","drawImage","heigth","redo"],"sources":["/Users/mykola/Desktop/Projects/PetProject2/my-app/client/src/store/canvasState.js"],"sourcesContent":["import {makeAutoObservable} from \"mobx\";\n\nclass CanvasState {\n    canvas = null\n\n    undoList = []\n    redoList = []\n    username = ''\n\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    setUsername(name){\n        this.username = name\n    }\n\n    setCanvas(canvas) {\n        this.canvas = canvas;\n    }\n\n    pushToUndo(data) {\n        this.undoList.push(data)\n    }\n\n    pushToRedo(data) {\n        this.redoList.push(data)\n    }\n\n    undo() {\n        let ctx = this.canvas.getContext('2d')\n        if (this.undoList.length > 0) {\n            let dataUrl = this.undoList.pop()\n            this.redoList.push(this.canvas.toDataURL())\n            let img = new Image()\n            img.src = dataUrl\n            img.onload = () => {\n                ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n                ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\n            }\n        } else {\n            ctx.clearRect(0, 0, this.canvas.width, this.canvas.heigth)\n        }\n    }\n\n    redo() {\n        let ctx = this.canvas.getContext('2d')\n        if (this.redoList.length > 0) {\n            let dataUrl = this.redoList.pop()\n            this.undoList.push(this.canvas.toDataURL())\n            let img = new Image()\n            img.src = dataUrl\n            img.onload = () => {\n                ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n                ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\n            }\n        }\n    }\n\n}\n\nexport default new CanvasState()\n"],"mappings":"AAAA,SAAQA,kBAAR,QAAiC,MAAjC;;AAEA,MAAMC,WAAN,CAAkB;EAQdC,WAAW,GAAG;IAAA,KAPdC,MAOc,GAPL,IAOK;IAAA,KALdC,QAKc,GALH,EAKG;IAAA,KAJdC,QAIc,GAJH,EAIG;IAAA,KAHdC,QAGc,GAHH,EAGG;IACVN,kBAAkB,CAAC,IAAD,CAAlB;EACH;;EAEDO,WAAW,CAACC,IAAD,EAAM;IACb,KAAKF,QAAL,GAAgBE,IAAhB;EACH;;EAEDC,SAAS,CAACN,MAAD,EAAS;IACd,KAAKA,MAAL,GAAcA,MAAd;EACH;;EAEDO,UAAU,CAACC,IAAD,EAAO;IACb,KAAKP,QAAL,CAAcQ,IAAd,CAAmBD,IAAnB;EACH;;EAEDE,UAAU,CAACF,IAAD,EAAO;IACb,KAAKN,QAAL,CAAcO,IAAd,CAAmBD,IAAnB;EACH;;EAEDG,IAAI,GAAG;IACH,IAAIC,GAAG,GAAG,KAAKZ,MAAL,CAAYa,UAAZ,CAAuB,IAAvB,CAAV;;IACA,IAAI,KAAKZ,QAAL,CAAca,MAAd,GAAuB,CAA3B,EAA8B;MAC1B,IAAIC,OAAO,GAAG,KAAKd,QAAL,CAAce,GAAd,EAAd;MACA,KAAKd,QAAL,CAAcO,IAAd,CAAmB,KAAKT,MAAL,CAAYiB,SAAZ,EAAnB;MACA,IAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV;MACAD,GAAG,CAACE,GAAJ,GAAUL,OAAV;;MACAG,GAAG,CAACG,MAAJ,GAAa,MAAM;QACfT,GAAG,CAACU,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,KAAKtB,MAAL,CAAYuB,KAAhC,EAAuC,KAAKvB,MAAL,CAAYwB,MAAnD;QACAZ,GAAG,CAACa,SAAJ,CAAcP,GAAd,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAKlB,MAAL,CAAYuB,KAArC,EAA4C,KAAKvB,MAAL,CAAYwB,MAAxD;MACH,CAHD;IAIH,CATD,MASO;MACHZ,GAAG,CAACU,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,KAAKtB,MAAL,CAAYuB,KAAhC,EAAuC,KAAKvB,MAAL,CAAY0B,MAAnD;IACH;EACJ;;EAEDC,IAAI,GAAG;IACH,IAAIf,GAAG,GAAG,KAAKZ,MAAL,CAAYa,UAAZ,CAAuB,IAAvB,CAAV;;IACA,IAAI,KAAKX,QAAL,CAAcY,MAAd,GAAuB,CAA3B,EAA8B;MAC1B,IAAIC,OAAO,GAAG,KAAKb,QAAL,CAAcc,GAAd,EAAd;MACA,KAAKf,QAAL,CAAcQ,IAAd,CAAmB,KAAKT,MAAL,CAAYiB,SAAZ,EAAnB;MACA,IAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV;MACAD,GAAG,CAACE,GAAJ,GAAUL,OAAV;;MACAG,GAAG,CAACG,MAAJ,GAAa,MAAM;QACfT,GAAG,CAACU,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,KAAKtB,MAAL,CAAYuB,KAAhC,EAAuC,KAAKvB,MAAL,CAAYwB,MAAnD;QACAZ,GAAG,CAACa,SAAJ,CAAcP,GAAd,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAKlB,MAAL,CAAYuB,KAArC,EAA4C,KAAKvB,MAAL,CAAYwB,MAAxD;MACH,CAHD;IAIH;EACJ;;AAxDa;;AA4DlB,eAAe,IAAI1B,WAAJ,EAAf"},"metadata":{},"sourceType":"module"}